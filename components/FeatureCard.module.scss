@layer component {
  .featureCard {
    cursor: default;
    position: relative;
    text-align: center;
    padding: 2.5rem var(--container-padding);
    background-color: var(--color-background);
    border-radius: 0.5rem;
    overflow: hidden;
    box-shadow: var(--shadow-md);
    transition: transform 0.3s ease, box-shadow 0.3s ease;

    &::after {
      content: "";
      position: absolute;
      top: 0;
      left: -150%;
      width: 100%;
      height: 100%;
      background: linear-gradient(
        90deg,
        transparent,
        rgba(255, 255, 255, 0.4),
        transparent
      );
    }

    &:hover {
      transform: translateY(-0.5rem);
      box-shadow: var(--shadow-lg);
      &::after {
        left: 150%;
        transition: left 0.6s ease-in-out;
      }
    }

    .iconWrapper {
      margin-bottom: 1.5rem;
      img {
        margin: 0 auto;
        transition: filter 0.3s ease; /* Assuming the icon is an SVG that can be colored with filters */
      }
    }

    &:hover .iconWrapper img {
      /* This is a trick to colorize a black SVG. We'd need to adjust if the icon color is different */
      filter: invert(34%) sepia(98%) saturate(1597%) hue-rotate(200deg)
        brightness(90%) contrast(91%); /* This filter approximates --color-accent */
    }

    .cardTitle {
      font-size: 1.25rem;
      font-weight: 600;
      margin-bottom: 0.75rem;
      color: var(--color-foreground);
    }

    .cardDescription {
      font-size: 1rem;
      color: var(--color-muted);
      line-height: 1.6;
    }
  }
}
